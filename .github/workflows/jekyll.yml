name: Build & Deploy Jekyll

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy: 
        default: false
        type: boolean
        required: false
        description: 'Deploy to production server'

env:
  DEPLOY_TO_PRODUCTION: ${{ contains(github.event.commits.*.message, '[deploy]') || github.event.inputs.deploy }}
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: debug
        run: |
          echo deploy: "${{ contains('github.event.commits.*.message', '[deploy]' )}}"
          echo "${DEPLOY_TO_PRODUCTION}"
          echo "${{ toJSON(github.event) }}"

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true
          cache-version: 24

      - name: Build static files for github pages
        run: bundle exec jekyll build --baseurl /bdsi.utwente.nl --destination _site_dev/
        
      - name: Create development artifact
        uses: actions/upload-pages-artifact@v2
        with: 
          name: github-pages-dev
          path: _site_dev/

      - name: Build static files for production
        if: contains(github.event.commits.*.message, '[deploy]')
        run: bundle exec jekyll build
        
      - name: Check dead links
        if: contains(github.event.commits.*.message, '[deploy]')
        run: |
          bundle exec htmlproofer
            --only-4xx
            --ignore-status-codes "403"
            --assume-extension ".html"
            --ignore-empty-alt true
            --ignore-missing-alt true 
            --checks "Links,Images" 
            ./_site
        
      - name: Create production artifact
        if: contains(github.event.commits.*.message, '[deploy]')
        uses: actions/upload-pages-artifact@v2

        
  # only deploy to production if [deploy] tag is present in commit message
  deploy-production:
    needs: build
    if: contains(github.event.commits.*.message, '[deploy]')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout www
        uses: actions/checkout@v2
        with:
          path: www
          ref: www

      - name: Fetch pages artifact
        uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: www-new
    
      - name: Push to www
        run: |
          rm -rf www/*
          cp -rf www-new/* www
          cd www
          git config --local user.name jekyll-bot
          git config --local user.email bdsi@utwente.nl
          git add .
          git commit -am "rebuild for $(echo $GITHUB_SHA | cut -c1-8)"
          git push origin www

  # always run dev deployment on push
  deploy-development:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: github-pages-dev


